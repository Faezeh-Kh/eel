/*
 * generated by Xtext 2.14.0
 */
package fr.tblf.energy.estimation.eel.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EelGrammarAccess extends AbstractGrammarElementFinder {
	
	public class PlatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.Platform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlatformAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlatformKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTargetsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTargetsMetaClassParserRuleCall_4_2_0 = (RuleCall)cTargetsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTargetsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTargetsMetaClassParserRuleCall_4_3_1_0 = (RuleCall)cTargetsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEstimationsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cEstimationsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cEstimationsEstimationParserRuleCall_5_2_0 = (RuleCall)cEstimationsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cEstimationsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cEstimationsEstimationParserRuleCall_5_3_1_0 = (RuleCall)cEstimationsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cVariablesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cVariablesVariableParserRuleCall_6_0_0 = (RuleCall)cVariablesAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cVariablesAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cVariablesVariableParserRuleCall_6_1_1_0 = (RuleCall)cVariablesAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Platform:
		//	{Platform}
		//	'Platform'
		//	name=EString
		//	'{' ('targets' '{' targets+=MetaClass ("," targets+=MetaClass)* '}')? ('estimations' '{' estimations+=Estimation (","
		//	estimations+=Estimation)* '}')? (variables+=Variable ("," variables+=Variable)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Platform} 'Platform' name=EString '{' ('targets' '{' targets+=MetaClass ("," targets+=MetaClass)* '}')? ('estimations'
		//'{' estimations+=Estimation ("," estimations+=Estimation)* '}')? (variables+=Variable ("," variables+=Variable)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Platform}
		public Action getPlatformAction_0() { return cPlatformAction_0; }
		
		//'Platform'
		public Keyword getPlatformKeyword_1() { return cPlatformKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('targets' '{' targets+=MetaClass ("," targets+=MetaClass)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'targets'
		public Keyword getTargetsKeyword_4_0() { return cTargetsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//targets+=MetaClass
		public Assignment getTargetsAssignment_4_2() { return cTargetsAssignment_4_2; }
		
		//MetaClass
		public RuleCall getTargetsMetaClassParserRuleCall_4_2_0() { return cTargetsMetaClassParserRuleCall_4_2_0; }
		
		//("," targets+=MetaClass)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//targets+=MetaClass
		public Assignment getTargetsAssignment_4_3_1() { return cTargetsAssignment_4_3_1; }
		
		//MetaClass
		public RuleCall getTargetsMetaClassParserRuleCall_4_3_1_0() { return cTargetsMetaClassParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('estimations' '{' estimations+=Estimation ("," estimations+=Estimation)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'estimations'
		public Keyword getEstimationsKeyword_5_0() { return cEstimationsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//estimations+=Estimation
		public Assignment getEstimationsAssignment_5_2() { return cEstimationsAssignment_5_2; }
		
		//Estimation
		public RuleCall getEstimationsEstimationParserRuleCall_5_2_0() { return cEstimationsEstimationParserRuleCall_5_2_0; }
		
		//("," estimations+=Estimation)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//estimations+=Estimation
		public Assignment getEstimationsAssignment_5_3_1() { return cEstimationsAssignment_5_3_1; }
		
		//Estimation
		public RuleCall getEstimationsEstimationParserRuleCall_5_3_1_0() { return cEstimationsEstimationParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//(variables+=Variable ("," variables+=Variable)*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//variables+=Variable
		public Assignment getVariablesAssignment_6_0() { return cVariablesAssignment_6_0; }
		
		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_0_0() { return cVariablesVariableParserRuleCall_6_0_0; }
		
		//("," variables+=Variable)*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }
		
		//variables+=Variable
		public Assignment getVariablesAssignment_6_1_1() { return cVariablesAssignment_6_1_1; }
		
		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_1_1_0() { return cVariablesVariableParserRuleCall_6_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class TargetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.Target");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMetaClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOperationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Target:
		//	MetaClass | Operation;
		@Override public ParserRule getRule() { return rule; }
		
		//MetaClass | Operation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MetaClass
		public RuleCall getMetaClassParserRuleCall_0() { return cMetaClassParserRuleCall_0; }
		
		//Operation
		public RuleCall getOperationParserRuleCall_1() { return cOperationParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EstimationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.Estimation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTargetTargetCrossReference_1_0 = (CrossReference)cTargetAssignment_1.eContents().get(0);
		private final RuleCall cTargetTargetEStringParserRuleCall_1_0_1 = (RuleCall)cTargetTargetCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVariablesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cVariablesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cVariablesVariableCrossReference_2_2_0 = (CrossReference)cVariablesAssignment_2_2.eContents().get(0);
		private final RuleCall cVariablesVariableEStringParserRuleCall_2_2_0_1 = (RuleCall)cVariablesVariableCrossReference_2_2_0.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cVariablesAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final CrossReference cVariablesVariableCrossReference_2_3_1_0 = (CrossReference)cVariablesAssignment_2_3_1.eContents().get(0);
		private final RuleCall cVariablesVariableEStringParserRuleCall_2_3_1_0_1 = (RuleCall)cVariablesVariableCrossReference_2_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cFormulaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFormulaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFormulaEStringParserRuleCall_4_0 = (RuleCall)cFormulaAssignment_4.eContents().get(0);
		
		//Estimation:
		//	'target' target=[Target|EString] ('variables' '(' variables+=[Variable|EString] ("," variables+=[Variable|EString])*
		//	')')?
		//	'formula' formula=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'target' target=[Target|EString] ('variables' '(' variables+=[Variable|EString] ("," variables+=[Variable|EString])*
		//')')? 'formula' formula=EString
		public Group getGroup() { return cGroup; }
		
		//'target'
		public Keyword getTargetKeyword_0() { return cTargetKeyword_0; }
		
		//target=[Target|EString]
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }
		
		//[Target|EString]
		public CrossReference getTargetTargetCrossReference_1_0() { return cTargetTargetCrossReference_1_0; }
		
		//EString
		public RuleCall getTargetTargetEStringParserRuleCall_1_0_1() { return cTargetTargetEStringParserRuleCall_1_0_1; }
		
		//('variables' '(' variables+=[Variable|EString] ("," variables+=[Variable|EString])* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'variables'
		public Keyword getVariablesKeyword_2_0() { return cVariablesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//variables+=[Variable|EString]
		public Assignment getVariablesAssignment_2_2() { return cVariablesAssignment_2_2; }
		
		//[Variable|EString]
		public CrossReference getVariablesVariableCrossReference_2_2_0() { return cVariablesVariableCrossReference_2_2_0; }
		
		//EString
		public RuleCall getVariablesVariableEStringParserRuleCall_2_2_0_1() { return cVariablesVariableEStringParserRuleCall_2_2_0_1; }
		
		//("," variables+=[Variable|EString])*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//variables+=[Variable|EString]
		public Assignment getVariablesAssignment_2_3_1() { return cVariablesAssignment_2_3_1; }
		
		//[Variable|EString]
		public CrossReference getVariablesVariableCrossReference_2_3_1_0() { return cVariablesVariableCrossReference_2_3_1_0; }
		
		//EString
		public RuleCall getVariablesVariableEStringParserRuleCall_2_3_1_0_1() { return cVariablesVariableEStringParserRuleCall_2_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//'formula'
		public Keyword getFormulaKeyword_3() { return cFormulaKeyword_3; }
		
		//formula=EString
		public Assignment getFormulaAssignment_4() { return cFormulaAssignment_4; }
		
		//EString
		public RuleCall getFormulaEStringParserRuleCall_4_0() { return cFormulaEStringParserRuleCall_4_0; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVibilityAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEDoubleParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//Variable:
		//	vibility=Visibility name=EString '=' value=EDouble;
		@Override public ParserRule getRule() { return rule; }
		
		//vibility=Visibility name=EString '=' value=EDouble
		public Group getGroup() { return cGroup; }
		
		//vibility=Visibility
		public Assignment getVibilityAssignment_0() { return cVibilityAssignment_0; }
		
		//Visibility
		public RuleCall getVibilityVisibilityEnumRuleCall_0_0() { return cVibilityVisibilityEnumRuleCall_0_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=EDouble
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_3_0() { return cValueEDoubleParserRuleCall_3_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class MetaClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.MetaClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cOperationsAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cOperationsOperationParserRuleCall_2_1_0_0 = (RuleCall)cOperationsAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cOperationsAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cOperationsOperationParserRuleCall_2_1_1_1_0 = (RuleCall)cOperationsAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//MetaClass:
		//	'class' name=EString ("(" (operations+=Operation ("," operations+=Operation)?)? ")")?;
		@Override public ParserRule getRule() { return rule; }
		
		//'class' name=EString ("(" (operations+=Operation ("," operations+=Operation)?)? ")")?
		public Group getGroup() { return cGroup; }
		
		//'class'
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//("(" (operations+=Operation ("," operations+=Operation)?)? ")")?
		public Group getGroup_2() { return cGroup_2; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//(operations+=Operation ("," operations+=Operation)?)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//operations+=Operation
		public Assignment getOperationsAssignment_2_1_0() { return cOperationsAssignment_2_1_0; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_2_1_0_0() { return cOperationsOperationParserRuleCall_2_1_0_0; }
		
		//("," operations+=Operation)?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }
		
		//operations+=Operation
		public Assignment getOperationsAssignment_2_1_1_1() { return cOperationsAssignment_2_1_1_1; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_2_1_1_1_0() { return cOperationsOperationParserRuleCall_2_1_1_1_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Operation:
		//	'op'? name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'op'? name=EString
		public Group getGroup() { return cGroup; }
		
		//'op'?
		public Keyword getOpKeyword_0() { return cOpKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	
	public class VisibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.tblf.energy.estimation.eel.Eel.Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGLOBALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGLOBALGLOBALKeyword_0_0 = (Keyword)cGLOBALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLOCALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLOCALLOCALKeyword_1_0 = (Keyword)cLOCALEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Visibility:
		//	GLOBAL | LOCAL;
		public EnumRule getRule() { return rule; }
		
		//GLOBAL | LOCAL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GLOBAL
		public EnumLiteralDeclaration getGLOBALEnumLiteralDeclaration_0() { return cGLOBALEnumLiteralDeclaration_0; }
		
		//"GLOBAL"
		public Keyword getGLOBALGLOBALKeyword_0_0() { return cGLOBALGLOBALKeyword_0_0; }
		
		//LOCAL
		public EnumLiteralDeclaration getLOCALEnumLiteralDeclaration_1() { return cLOCALEnumLiteralDeclaration_1; }
		
		//"LOCAL"
		public Keyword getLOCALLOCALKeyword_1_0() { return cLOCALLOCALKeyword_1_0; }
	}
	
	private final PlatformElements pPlatform;
	private final TargetElements pTarget;
	private final EStringElements pEString;
	private final EstimationElements pEstimation;
	private final VariableElements pVariable;
	private final VisibilityElements eVisibility;
	private final EDoubleElements pEDouble;
	private final MetaClassElements pMetaClass;
	private final OperationElements pOperation;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EelGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPlatform = new PlatformElements();
		this.pTarget = new TargetElements();
		this.pEString = new EStringElements();
		this.pEstimation = new EstimationElements();
		this.pVariable = new VariableElements();
		this.eVisibility = new VisibilityElements();
		this.pEDouble = new EDoubleElements();
		this.pMetaClass = new MetaClassElements();
		this.pOperation = new OperationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.tblf.energy.estimation.eel.Eel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Platform:
	//	{Platform}
	//	'Platform'
	//	name=EString
	//	'{' ('targets' '{' targets+=MetaClass ("," targets+=MetaClass)* '}')? ('estimations' '{' estimations+=Estimation (","
	//	estimations+=Estimation)* '}')? (variables+=Variable ("," variables+=Variable)*)?
	//	'}';
	public PlatformElements getPlatformAccess() {
		return pPlatform;
	}
	
	public ParserRule getPlatformRule() {
		return getPlatformAccess().getRule();
	}
	
	//Target:
	//	MetaClass | Operation;
	public TargetElements getTargetAccess() {
		return pTarget;
	}
	
	public ParserRule getTargetRule() {
		return getTargetAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Estimation:
	//	'target' target=[Target|EString] ('variables' '(' variables+=[Variable|EString] ("," variables+=[Variable|EString])*
	//	')')?
	//	'formula' formula=EString;
	public EstimationElements getEstimationAccess() {
		return pEstimation;
	}
	
	public ParserRule getEstimationRule() {
		return getEstimationAccess().getRule();
	}
	
	//Variable:
	//	vibility=Visibility name=EString '=' value=EDouble;
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//enum Visibility:
	//	GLOBAL | LOCAL;
	public VisibilityElements getVisibilityAccess() {
		return eVisibility;
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//MetaClass:
	//	'class' name=EString ("(" (operations+=Operation ("," operations+=Operation)?)? ")")?;
	public MetaClassElements getMetaClassAccess() {
		return pMetaClass;
	}
	
	public ParserRule getMetaClassRule() {
		return getMetaClassAccess().getRule();
	}
	
	//Operation:
	//	'op'? name=EString;
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
