/**
 * generated by Xtext 2.14.0
 */
package fr.tblf.energy.estimation.eel.formatting2;

import com.google.inject.Inject;
import eel.Estimation;
import eel.MetaClass;
import eel.Operation;
import eel.Platform;
import eel.Variable;
import fr.tblf.energy.estimation.eel.services.EelGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class EelFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private EelGrammarAccess _eelGrammarAccess;
  
  protected void _format(final Platform platform, @Extension final IFormattableDocument document) {
    EList<Estimation> _estimations = platform.getEstimations();
    for (final Estimation estimation : _estimations) {
      document.<Estimation>format(estimation);
    }
    EList<Variable> _variables = platform.getVariables();
    for (final Variable variable : _variables) {
      document.<Variable>format(variable);
    }
    EList<MetaClass> _targets = platform.getTargets();
    for (final MetaClass metaClass : _targets) {
      document.<MetaClass>format(metaClass);
    }
  }
  
  protected void _format(final MetaClass metaClass, @Extension final IFormattableDocument document) {
    EList<Operation> _operations = metaClass.getOperations();
    for (final Operation operation : _operations) {
      document.<Operation>format(operation);
    }
  }
  
  public void format(final Object metaClass, final IFormattableDocument document) {
    if (metaClass instanceof XtextResource) {
      _format((XtextResource)metaClass, document);
      return;
    } else if (metaClass instanceof MetaClass) {
      _format((MetaClass)metaClass, document);
      return;
    } else if (metaClass instanceof Platform) {
      _format((Platform)metaClass, document);
      return;
    } else if (metaClass instanceof EObject) {
      _format((EObject)metaClass, document);
      return;
    } else if (metaClass == null) {
      _format((Void)null, document);
      return;
    } else if (metaClass != null) {
      _format(metaClass, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(metaClass, document).toString());
    }
  }
}
