/*
 * generated by Xtext 2.14.0
 */
package fr.tblf.energy.estimation.eel.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import fr.tblf.energy.estimation.eel.ide.contentassist.antlr.internal.InternalEelParser;
import fr.tblf.energy.estimation.eel.services.EelGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class EelParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(EelGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, EelGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTargetAccess().getAlternatives(), "rule__Target__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
			builder.put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
			builder.put(grammarAccess.getPlatformAccess().getGroup(), "rule__Platform__Group__0");
			builder.put(grammarAccess.getPlatformAccess().getGroup_4(), "rule__Platform__Group_4__0");
			builder.put(grammarAccess.getPlatformAccess().getGroup_4_3(), "rule__Platform__Group_4_3__0");
			builder.put(grammarAccess.getPlatformAccess().getGroup_5(), "rule__Platform__Group_5__0");
			builder.put(grammarAccess.getPlatformAccess().getGroup_5_3(), "rule__Platform__Group_5_3__0");
			builder.put(grammarAccess.getPlatformAccess().getGroup_6(), "rule__Platform__Group_6__0");
			builder.put(grammarAccess.getPlatformAccess().getGroup_6_1(), "rule__Platform__Group_6_1__0");
			builder.put(grammarAccess.getEstimationAccess().getGroup(), "rule__Estimation__Group__0");
			builder.put(grammarAccess.getEstimationAccess().getGroup_2(), "rule__Estimation__Group_2__0");
			builder.put(grammarAccess.getEstimationAccess().getGroup_2_3(), "rule__Estimation__Group_2_3__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
			builder.put(grammarAccess.getMetaClassAccess().getGroup(), "rule__MetaClass__Group__0");
			builder.put(grammarAccess.getMetaClassAccess().getGroup_2(), "rule__MetaClass__Group_2__0");
			builder.put(grammarAccess.getMetaClassAccess().getGroup_2_1(), "rule__MetaClass__Group_2_1__0");
			builder.put(grammarAccess.getMetaClassAccess().getGroup_2_1_1(), "rule__MetaClass__Group_2_1_1__0");
			builder.put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
			builder.put(grammarAccess.getPlatformAccess().getNameAssignment_2(), "rule__Platform__NameAssignment_2");
			builder.put(grammarAccess.getPlatformAccess().getTargetsAssignment_4_2(), "rule__Platform__TargetsAssignment_4_2");
			builder.put(grammarAccess.getPlatformAccess().getTargetsAssignment_4_3_1(), "rule__Platform__TargetsAssignment_4_3_1");
			builder.put(grammarAccess.getPlatformAccess().getEstimationsAssignment_5_2(), "rule__Platform__EstimationsAssignment_5_2");
			builder.put(grammarAccess.getPlatformAccess().getEstimationsAssignment_5_3_1(), "rule__Platform__EstimationsAssignment_5_3_1");
			builder.put(grammarAccess.getPlatformAccess().getVariablesAssignment_6_0(), "rule__Platform__VariablesAssignment_6_0");
			builder.put(grammarAccess.getPlatformAccess().getVariablesAssignment_6_1_1(), "rule__Platform__VariablesAssignment_6_1_1");
			builder.put(grammarAccess.getEstimationAccess().getTargetAssignment_1(), "rule__Estimation__TargetAssignment_1");
			builder.put(grammarAccess.getEstimationAccess().getVariablesAssignment_2_2(), "rule__Estimation__VariablesAssignment_2_2");
			builder.put(grammarAccess.getEstimationAccess().getVariablesAssignment_2_3_1(), "rule__Estimation__VariablesAssignment_2_3_1");
			builder.put(grammarAccess.getEstimationAccess().getFormulaAssignment_4(), "rule__Estimation__FormulaAssignment_4");
			builder.put(grammarAccess.getVariableAccess().getVibilityAssignment_0(), "rule__Variable__VibilityAssignment_0");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment_1(), "rule__Variable__NameAssignment_1");
			builder.put(grammarAccess.getVariableAccess().getValueAssignment_3(), "rule__Variable__ValueAssignment_3");
			builder.put(grammarAccess.getMetaClassAccess().getNameAssignment_1(), "rule__MetaClass__NameAssignment_1");
			builder.put(grammarAccess.getMetaClassAccess().getOperationsAssignment_2_1_0(), "rule__MetaClass__OperationsAssignment_2_1_0");
			builder.put(grammarAccess.getMetaClassAccess().getOperationsAssignment_2_1_1_1(), "rule__MetaClass__OperationsAssignment_2_1_1_1");
			builder.put(grammarAccess.getOperationAccess().getNameAssignment_1(), "rule__Operation__NameAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private EelGrammarAccess grammarAccess;

	@Override
	protected InternalEelParser createParser() {
		InternalEelParser result = new InternalEelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public EelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(EelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
