/*
 * generated by Xtext 2.14.0
 */
package fr.tblf.energy.estimation.formatting2

import com.google.inject.Inject
import fr.tblf.energy.estimation.eel.Platform
import fr.tblf.energy.estimation.services.EelGrammarAccess
import org.eclipse.emf.ecore.EClass
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class EelFormatter extends AbstractFormatter2 {
	
	@Inject extension EelGrammarAccess

	def dispatch void format(Platform platform, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (variable : platform.variables) {
			variable.format
		}
		for (measure : platform.measures) {
			measure.format
		}
	}

	def dispatch void format(EClass eClass, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (eAnnotation : eClass.eAnnotations) {
			eAnnotation.format
		}
		for (eTypeParameter : eClass.eTypeParameters) {
			eTypeParameter.format
		}
		for (eOperation : eClass.eOperations) {
			eOperation.format
		}
		for (eStructuralFeature : eClass.eStructuralFeatures) {
			eStructuralFeature.format
		}
		for (eGenericType : eClass.eGenericSuperTypes) {
			eGenericType.format
		}
	}
	
	// TODO: implement for EOperation, MeasurementUncertainty, MeasureValue, MeasureOCL, MeasureAttribute, MeasureCast, MeasureProductOperation, MeasureSumOperation, EnergyComputation, PowerComputation, EAnnotation, ETypeParameter, EGenericType, EAttribute, EReference, EDataType, EEnum, EEnumLiteral, EParameter, Interval, Sampling, Sample
}
