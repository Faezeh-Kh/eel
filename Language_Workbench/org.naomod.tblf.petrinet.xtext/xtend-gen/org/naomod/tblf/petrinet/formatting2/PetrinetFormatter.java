/**
 * generated by Xtext 2.12.0
 */
package org.naomod.tblf.petrinet.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.naomod.tblf.petrinet.Net;
import org.naomod.tblf.petrinet.Place;
import org.naomod.tblf.petrinet.Transition;
import org.naomod.tblf.petrinet.services.PetrinetGrammarAccess;

@SuppressWarnings("all")
public class PetrinetFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private PetrinetGrammarAccess _petrinetGrammarAccess;
  
  protected void _format(final Net net, @Extension final IFormattableDocument document) {
    EList<Place> _places = net.getPlaces();
    for (final Place place : _places) {
      document.<Place>format(place);
    }
    EList<Transition> _transitions = net.getTransitions();
    for (final Transition transition : _transitions) {
      document.<Transition>format(transition);
    }
  }
  
  public void format(final Object net, final IFormattableDocument document) {
    if (net instanceof XtextResource) {
      _format((XtextResource)net, document);
      return;
    } else if (net instanceof Net) {
      _format((Net)net, document);
      return;
    } else if (net instanceof EObject) {
      _format((EObject)net, document);
      return;
    } else if (net == null) {
      _format((Void)null, document);
      return;
    } else if (net != null) {
      _format(net, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(net, document).toString());
    }
  }
}
