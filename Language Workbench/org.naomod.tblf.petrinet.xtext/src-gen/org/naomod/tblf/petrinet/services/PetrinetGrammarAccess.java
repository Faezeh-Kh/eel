/*
 * generated by Xtext 2.12.0
 */
package org.naomod.tblf.petrinet.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PetrinetGrammarAccess extends AbstractGrammarElementFinder {
	
	public class NetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.naomod.tblf.petrinet.Petrinet.Net");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPlacesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cPlacesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cPlacesPlaceParserRuleCall_4_2_0 = (RuleCall)cPlacesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cPlacesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cPlacesPlaceParserRuleCall_4_3_1_0 = (RuleCall)cPlacesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTransitionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTransitionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTransitionsTransitionParserRuleCall_5_2_0 = (RuleCall)cTransitionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cTransitionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cTransitionsTransitionParserRuleCall_5_3_1_0 = (RuleCall)cTransitionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cFirstKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFirstAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cFirstPlaceCrossReference_7_0 = (CrossReference)cFirstAssignment_7.eContents().get(0);
		private final RuleCall cFirstPlaceIDTerminalRuleCall_7_0_1 = (RuleCall)cFirstPlaceCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Net:
		//	{Net}
		//	'Net'
		//	'{' ('name' name=ID)? ('places' '{' places+=Place ("," places+=Place)* '}')? ('transitions' '{'
		//	transitions+=Transition ("," transitions+=Transition)* '}')?
		//	'first' first=[Place]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Net} 'Net' '{' ('name' name=ID)? ('places' '{' places+=Place ("," places+=Place)* '}')? ('transitions' '{'
		//transitions+=Transition ("," transitions+=Transition)* '}')? 'first' first=[Place] '}'
		public Group getGroup() { return cGroup; }
		
		//{Net}
		public Action getNetAction_0() { return cNetAction_0; }
		
		//'Net'
		public Keyword getNetKeyword_1() { return cNetKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('name' name=ID)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=ID
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_1_0() { return cNameIDTerminalRuleCall_3_1_0; }
		
		//('places' '{' places+=Place ("," places+=Place)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'places'
		public Keyword getPlacesKeyword_4_0() { return cPlacesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//places+=Place
		public Assignment getPlacesAssignment_4_2() { return cPlacesAssignment_4_2; }
		
		//Place
		public RuleCall getPlacesPlaceParserRuleCall_4_2_0() { return cPlacesPlaceParserRuleCall_4_2_0; }
		
		//("," places+=Place)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//places+=Place
		public Assignment getPlacesAssignment_4_3_1() { return cPlacesAssignment_4_3_1; }
		
		//Place
		public RuleCall getPlacesPlaceParserRuleCall_4_3_1_0() { return cPlacesPlaceParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('transitions' '{' transitions+=Transition ("," transitions+=Transition)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'transitions'
		public Keyword getTransitionsKeyword_5_0() { return cTransitionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//transitions+=Transition
		public Assignment getTransitionsAssignment_5_2() { return cTransitionsAssignment_5_2; }
		
		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_5_2_0() { return cTransitionsTransitionParserRuleCall_5_2_0; }
		
		//("," transitions+=Transition)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//transitions+=Transition
		public Assignment getTransitionsAssignment_5_3_1() { return cTransitionsAssignment_5_3_1; }
		
		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_5_3_1_0() { return cTransitionsTransitionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'first'
		public Keyword getFirstKeyword_6() { return cFirstKeyword_6; }
		
		//first=[Place]
		public Assignment getFirstAssignment_7() { return cFirstAssignment_7; }
		
		//[Place]
		public CrossReference getFirstPlaceCrossReference_7_0() { return cFirstPlaceCrossReference_7_0; }
		
		//ID
		public RuleCall getFirstPlaceIDTerminalRuleCall_7_0_1() { return cFirstPlaceIDTerminalRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.naomod.tblf.petrinet.Petrinet.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class PlaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.naomod.tblf.petrinet.Petrinet.Place");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTokensKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTokensAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTokensEIntParserRuleCall_4_1_0 = (RuleCall)cTokensAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cToKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cToAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cToTransitionCrossReference_5_1_0 = (CrossReference)cToAssignment_5_1.eContents().get(0);
		private final RuleCall cToTransitionIDTerminalRuleCall_5_1_0_1 = (RuleCall)cToTransitionCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Place:
		//	{Place}
		//	'Place'
		//	'{' ('name' name=ID)? ('tokens' tokens=EInt)? ('to' to=[Transition])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Place} 'Place' '{' ('name' name=ID)? ('tokens' tokens=EInt)? ('to' to=[Transition])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Place}
		public Action getPlaceAction_0() { return cPlaceAction_0; }
		
		//'Place'
		public Keyword getPlaceKeyword_1() { return cPlaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('name' name=ID)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=ID
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_1_0() { return cNameIDTerminalRuleCall_3_1_0; }
		
		//('tokens' tokens=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'tokens'
		public Keyword getTokensKeyword_4_0() { return cTokensKeyword_4_0; }
		
		//tokens=EInt
		public Assignment getTokensAssignment_4_1() { return cTokensAssignment_4_1; }
		
		//EInt
		public RuleCall getTokensEIntParserRuleCall_4_1_0() { return cTokensEIntParserRuleCall_4_1_0; }
		
		//('to' to=[Transition])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'to'
		public Keyword getToKeyword_5_0() { return cToKeyword_5_0; }
		
		//to=[Transition]
		public Assignment getToAssignment_5_1() { return cToAssignment_5_1; }
		
		//[Transition]
		public CrossReference getToTransitionCrossReference_5_1_0() { return cToTransitionCrossReference_5_1_0; }
		
		//ID
		public RuleCall getToTransitionIDTerminalRuleCall_5_1_0_1() { return cToTransitionIDTerminalRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.naomod.tblf.petrinet.Petrinet.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTransitionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOutputKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOutputAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cOutputPlaceCrossReference_4_2_0 = (CrossReference)cOutputAssignment_4_2.eContents().get(0);
		private final RuleCall cOutputPlaceIDTerminalRuleCall_4_2_0_1 = (RuleCall)cOutputPlaceCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cOutputAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cOutputPlaceCrossReference_4_3_1_0 = (CrossReference)cOutputAssignment_4_3_1.eContents().get(0);
		private final RuleCall cOutputPlaceIDTerminalRuleCall_4_3_1_0_1 = (RuleCall)cOutputPlaceCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInputKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInputAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cInputPlaceCrossReference_5_2_0 = (CrossReference)cInputAssignment_5_2.eContents().get(0);
		private final RuleCall cInputPlaceIDTerminalRuleCall_5_2_0_1 = (RuleCall)cInputPlaceCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInputAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cInputPlaceCrossReference_5_3_1_0 = (CrossReference)cInputAssignment_5_3_1.eContents().get(0);
		private final RuleCall cInputPlaceIDTerminalRuleCall_5_3_1_0_1 = (RuleCall)cInputPlaceCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Transition:
		//	{Transition}
		//	'Transition'
		//	'{' ('name' name=ID)? ('output' '(' output+=[Place] ("," output+=[Place])* ')')? ('input' '(' input+=[Place] (","
		//	input+=[Place])* ')')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Transition} 'Transition' '{' ('name' name=ID)? ('output' '(' output+=[Place] ("," output+=[Place])* ')')? ('input' '('
		//input+=[Place] ("," input+=[Place])* ')')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Transition}
		public Action getTransitionAction_0() { return cTransitionAction_0; }
		
		//'Transition'
		public Keyword getTransitionKeyword_1() { return cTransitionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('name' name=ID)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//name=ID
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_1_0() { return cNameIDTerminalRuleCall_3_1_0; }
		
		//('output' '(' output+=[Place] ("," output+=[Place])* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'output'
		public Keyword getOutputKeyword_4_0() { return cOutputKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//output+=[Place]
		public Assignment getOutputAssignment_4_2() { return cOutputAssignment_4_2; }
		
		//[Place]
		public CrossReference getOutputPlaceCrossReference_4_2_0() { return cOutputPlaceCrossReference_4_2_0; }
		
		//ID
		public RuleCall getOutputPlaceIDTerminalRuleCall_4_2_0_1() { return cOutputPlaceIDTerminalRuleCall_4_2_0_1; }
		
		//("," output+=[Place])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//output+=[Place]
		public Assignment getOutputAssignment_4_3_1() { return cOutputAssignment_4_3_1; }
		
		//[Place]
		public CrossReference getOutputPlaceCrossReference_4_3_1_0() { return cOutputPlaceCrossReference_4_3_1_0; }
		
		//ID
		public RuleCall getOutputPlaceIDTerminalRuleCall_4_3_1_0_1() { return cOutputPlaceIDTerminalRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('input' '(' input+=[Place] ("," input+=[Place])* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'input'
		public Keyword getInputKeyword_5_0() { return cInputKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//input+=[Place]
		public Assignment getInputAssignment_5_2() { return cInputAssignment_5_2; }
		
		//[Place]
		public CrossReference getInputPlaceCrossReference_5_2_0() { return cInputPlaceCrossReference_5_2_0; }
		
		//ID
		public RuleCall getInputPlaceIDTerminalRuleCall_5_2_0_1() { return cInputPlaceIDTerminalRuleCall_5_2_0_1; }
		
		//("," input+=[Place])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//input+=[Place]
		public Assignment getInputAssignment_5_3_1() { return cInputAssignment_5_3_1; }
		
		//[Place]
		public CrossReference getInputPlaceCrossReference_5_3_1_0() { return cInputPlaceCrossReference_5_3_1_0; }
		
		//ID
		public RuleCall getInputPlaceIDTerminalRuleCall_5_3_1_0_1() { return cInputPlaceIDTerminalRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.naomod.tblf.petrinet.Petrinet.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	private final NetElements pNet;
	private final EStringElements pEString;
	private final PlaceElements pPlace;
	private final TransitionElements pTransition;
	private final EIntElements pEInt;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PetrinetGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pNet = new NetElements();
		this.pEString = new EStringElements();
		this.pPlace = new PlaceElements();
		this.pTransition = new TransitionElements();
		this.pEInt = new EIntElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.naomod.tblf.petrinet.Petrinet".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Net:
	//	{Net}
	//	'Net'
	//	'{' ('name' name=ID)? ('places' '{' places+=Place ("," places+=Place)* '}')? ('transitions' '{'
	//	transitions+=Transition ("," transitions+=Transition)* '}')?
	//	'first' first=[Place]
	//	'}';
	public NetElements getNetAccess() {
		return pNet;
	}
	
	public ParserRule getNetRule() {
		return getNetAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Place:
	//	{Place}
	//	'Place'
	//	'{' ('name' name=ID)? ('tokens' tokens=EInt)? ('to' to=[Transition])?
	//	'}';
	public PlaceElements getPlaceAccess() {
		return pPlace;
	}
	
	public ParserRule getPlaceRule() {
		return getPlaceAccess().getRule();
	}
	
	//Transition:
	//	{Transition}
	//	'Transition'
	//	'{' ('name' name=ID)? ('output' '(' output+=[Place] ("," output+=[Place])* ')')? ('input' '(' input+=[Place] (","
	//	input+=[Place])* ')')?
	//	'}';
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
