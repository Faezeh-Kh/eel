/*
 * generated by Xtext 2.12.0
 */
package org.naomod.tblf.petrinet.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.naomod.tblf.petrinet.ide.contentassist.antlr.internal.InternalPetrinetParser;
import org.naomod.tblf.petrinet.services.PetrinetGrammarAccess;

public class PetrinetParser extends AbstractContentAssistParser {

	@Inject
	private PetrinetGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalPetrinetParser createParser() {
		InternalPetrinetParser result = new InternalPetrinetParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getNetAccess().getGroup(), "rule__Net__Group__0");
					put(grammarAccess.getNetAccess().getGroup_3(), "rule__Net__Group_3__0");
					put(grammarAccess.getNetAccess().getGroup_4(), "rule__Net__Group_4__0");
					put(grammarAccess.getNetAccess().getGroup_4_3(), "rule__Net__Group_4_3__0");
					put(grammarAccess.getNetAccess().getGroup_5(), "rule__Net__Group_5__0");
					put(grammarAccess.getNetAccess().getGroup_5_3(), "rule__Net__Group_5_3__0");
					put(grammarAccess.getPlaceAccess().getGroup(), "rule__Place__Group__0");
					put(grammarAccess.getPlaceAccess().getGroup_3(), "rule__Place__Group_3__0");
					put(grammarAccess.getPlaceAccess().getGroup_4(), "rule__Place__Group_4__0");
					put(grammarAccess.getPlaceAccess().getGroup_5(), "rule__Place__Group_5__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_3(), "rule__Transition__Group_3__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_3(), "rule__Transition__Group_4_3__0");
					put(grammarAccess.getTransitionAccess().getGroup_5(), "rule__Transition__Group_5__0");
					put(grammarAccess.getTransitionAccess().getGroup_5_3(), "rule__Transition__Group_5_3__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getNetAccess().getNameAssignment_3_1(), "rule__Net__NameAssignment_3_1");
					put(grammarAccess.getNetAccess().getPlacesAssignment_4_2(), "rule__Net__PlacesAssignment_4_2");
					put(grammarAccess.getNetAccess().getPlacesAssignment_4_3_1(), "rule__Net__PlacesAssignment_4_3_1");
					put(grammarAccess.getNetAccess().getTransitionsAssignment_5_2(), "rule__Net__TransitionsAssignment_5_2");
					put(grammarAccess.getNetAccess().getTransitionsAssignment_5_3_1(), "rule__Net__TransitionsAssignment_5_3_1");
					put(grammarAccess.getNetAccess().getFirstAssignment_7(), "rule__Net__FirstAssignment_7");
					put(grammarAccess.getPlaceAccess().getNameAssignment_3_1(), "rule__Place__NameAssignment_3_1");
					put(grammarAccess.getPlaceAccess().getTokensAssignment_4_1(), "rule__Place__TokensAssignment_4_1");
					put(grammarAccess.getPlaceAccess().getToAssignment_5_1(), "rule__Place__ToAssignment_5_1");
					put(grammarAccess.getTransitionAccess().getNameAssignment_3_1(), "rule__Transition__NameAssignment_3_1");
					put(grammarAccess.getTransitionAccess().getOutputAssignment_4_2(), "rule__Transition__OutputAssignment_4_2");
					put(grammarAccess.getTransitionAccess().getOutputAssignment_4_3_1(), "rule__Transition__OutputAssignment_4_3_1");
					put(grammarAccess.getTransitionAccess().getInputAssignment_5_2(), "rule__Transition__InputAssignment_5_2");
					put(grammarAccess.getTransitionAccess().getInputAssignment_5_3_1(), "rule__Transition__InputAssignment_5_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PetrinetGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PetrinetGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
